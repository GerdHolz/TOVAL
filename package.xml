<?xml version="1.0" encoding="UTF-8"?>
<project name="TOVAL.package" default="package" basedir=".">

	<!--
	Apache Ant build file for the TOVAL project
	
	This build file generates three JAR-files from the project:
	- toval-0.1.5.jar
	- toval-0.1.5-sources.jar
	- toval-0.1.5-javadoc.jar
	
	The building process starts with cleaning all target files including compiles
	java classes, compiled tests, and test reports (see #clean). Afterwards a
	timestamp is generated and the target directory structure is created (see #init).
	Then the project gets compiled (see #compile) and all unit tests are performed
	(see #test). If the compilation ran without errors, the JARs are packaged (see #package).
	
	 -->

	<!-- Project details -->
	<property name="artifact.name" value="toval" />
	<property name="version.name" value="0.1.5" />

	<!-- Names for generated files -->
	<property name="jar.file.name" value="${artifact.name}-${version.name}" />
	<property name="jar.sources.file.name" value="${jar.file.name}-sources" />
	<property name="jar.javadoc.file.name" value="${jar.file.name}-javadoc" />

	<!-- Source and destination directories -->
	<echo>Base dir: ${basedir}</echo>
	<property name="src.dir" value="${basedir}/src" />
	<echo>Source dir: ${src.dir}</echo>
	<property name="res.dir" value="${basedir}/res" />
	<property name="target.dir" value="${basedir}/bin" />
	<property name="target.dir.jar" value="${target.dir}/${artifact.name}-${version.name}" />
	<property name="libs.dir" value="${basedir}/lib" />
	<property name="docs.temp.dir" value="${target.dir}/docs" />
	<property name="classes.target.dir" value="${target.dir}/classes-ant" />
	<property name="docs.temp.dir" value="${target.dir}/docs" />

	<!-- Define classpath -->

	<path id="TOVAL.classpath">
		<pathelement location="${classes.target.dir}" />
	</path>

	<!-- Package JARs -->
	<target name="package" depends="compile" description="Packages the project to JAR files">
		<echo message="${ant.project.name}: ${ant.file}" />
		<echo>Deleting old JARs...</echo>
		<delete file="${target.dir.jar}/${jar.file.name}.jar" />
		<delete file="${target.dir.jar}/${jar.sources.file.name}.jar" />

		<echo>Creating new JARs...</echo>
		<jar jarfile="${target.dir.jar}/${jar.file.name}.jar" basedir="${classes.target.dir}">
			<manifest>
				<attribute name="X-Date" value="${touch.time}" />
			</manifest>
		</jar>
		<jar jarfile="${target.dir.jar}/${jar.sources.file.name}.jar">
			<fileset dir="${src.dir}">
				<include name="**/*.java" />
			</fileset>
			<fileset dir="${res.dir}" />
			<manifest>
				<attribute name="X-Date" value="${touch.time}" />
			</manifest>
		</jar>
	</target>

	<!-- Package JARs -->

	<target name="compile" depends="init" description="Compiles the source and the test files">
		<echo>Compile classes...</echo>
		<javac destdir="${classes.target.dir}" includeantruntime="false">
			<src path="${src.dir}" />
			<src path="${res.dir}" />
			<classpath refid="TOVAL.classpath" />
		</javac>
	</target>

	<target name="package-javadoc" depends="compile" description="Generates Javadoc information">
		<delete file="${target.dir.jar}/${jar.javadoc.file.name}.jar" />

		<echo>Generating javadoc files...</echo>
		<javadoc sourcepath="${src.dir}" destdir="${docs.temp.dir}">
			<fileset dir="${src.dir}">
				<include name="**/*.java" />
			</fileset>
			<fileset dir="${res.dir}">
				<include name="**/*.java" />
			</fileset>
		</javadoc>
		<javadoc sourcepath="${res.dir}" destdir="${docs.temp.dir}">
			<fileset dir="${src.dir}">
				<include name="**/*.java" />
			</fileset>
			<fileset dir="${res.dir}">
				<include name="**/*.java" />
			</fileset>
		</javadoc>

		<jar jarfile="${target.dir.jar}/${jar.javadoc.file.name}.jar" basedir="${docs.temp.dir}">
			<manifest>
				<attribute name="X-Date" value="${touch.time}" />
			</manifest>
		</jar>

		<echo>Deleting temporary javadoc files...</echo>
		<delete dir="${docs.temp.dir}" />
	</target>

	<target name="clean" description="Deletes the target files including current JARs. Old versions of the JARs stay untouched.">
		<echo>Delete target files...</echo>
		<!-- Delete compiled classes and tests -->
		<delete dir="${classes.target.dir}" />
	</target>

	<target name="init" depends="clean" description="Creates the target directory structure">
		<echo>Create timestamp...</echo>
		<tstamp>
			<format property="touch.time" pattern="dd/MM/yyyy hh:mm aa" />
		</tstamp>
		<echo>Prepare directories...</echo>
		<mkdir dir="${classes.target.dir}" />
		<copy includeemptydirs="false" todir="${classes.target.dir}">
			<fileset dir="${src.dir}">
				<exclude name="**/*.java" />
			</fileset>
			<fileset dir="${res.dir}">
				<exclude name="**/*.java" />
			</fileset>
		</copy>
	</target>

</project>